[{"/Users/syedkhurshid/Documents/Coding/React/blockchain/src/index.js":"1","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/reportWebVitals.js":"2","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/App.js":"3","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Layout/View.jsx":"4","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Pages/Main.jsx":"5","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Layout/Nav.jsx":"6","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Pages/Settings.jsx":"7","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Pages/HelpCenter.jsx":"8","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Pages/History.jsx":"9","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Pages/Invest.jsx":"10"},{"size":500,"mtime":1611530592593,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611530592594,"results":"13","hashOfConfig":"12"},{"size":1523,"mtime":1611558943022,"results":"14","hashOfConfig":"12"},{"size":954,"mtime":1611562497508,"results":"15","hashOfConfig":"12"},{"size":2937,"mtime":1611562016772,"results":"16","hashOfConfig":"12"},{"size":5121,"mtime":1611558829916,"results":"17","hashOfConfig":"12"},{"size":239,"mtime":1611562260625,"results":"18","hashOfConfig":"12"},{"size":237,"mtime":1611562339734,"results":"19","hashOfConfig":"12"},{"size":237,"mtime":1611562214427,"results":"20","hashOfConfig":"12"},{"size":235,"mtime":1611562381981,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"odiqgl",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/syedkhurshid/Documents/Coding/React/blockchain/src/index.js",[],["46","47"],"/Users/syedkhurshid/Documents/Coding/React/blockchain/src/reportWebVitals.js",[],"/Users/syedkhurshid/Documents/Coding/React/blockchain/src/App.js",["48","49"],"//Importing the required packages\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  Paper,\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport Nav from \"./Layout/Nav\";\nimport View from \"./Layout/View\";\n\n//This is for Themeing Purpose\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    minHeight: \"100vh\",\n  },\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\nconst LightTheme = createMuiTheme({\n  palette: {\n    type: \"light\",\n  },\n});\n\nfunction App() {\n  //Bring ing in the theme from the useStyles outside the function\n  const classes = useStyles();\n  //Createing the state where the style can be changed on click\n  const [darkMode, setDark] = useState(false);\n\n  //createing the theme\n  const preferTheme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n      transitions: {\n        easing: {\n          easeIn: \"1s\",\n        },\n      },\n    },\n    transitions: {\n      easing: \"easeOut\",\n    },\n  });\n\n  //This will check the changes in dark state\n\n  useEffect(() => {}, []);\n\n  //Note a a universal button needs to be passed so that the dark theme can be interchanged\n\n  return (\n    <ThemeProvider theme={preferTheme}>\n      <Paper className={classes.root}>\n        <Router>\n          <Nav dark={darkMode} setDark={setDark} />\n          <View />\n        </Router>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Layout/View.jsx",[],"/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Pages/Main.jsx",["50"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  makeStyles,\n  Chip,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\n\n//for themeing the component\nconst useStyles = makeStyles({\n  mainGrid: {\n    padding: \"1rem\",\n    width: \"100%\",\n    marginTop: \"1rem\",\n  },\n  addFunds: {\n    width: \"60%\",\n    height: \"80%\",\n    border: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  secondContainer: {\n    height: \"50%\",\n    marginTop: \"2rem\",\n  },\n  addFunds_Typogrophy: {\n    textAlign: \"center\",\n  },\n});\n\nexport default function Main() {\n  //This is where the themeing from the top will be brought in\n  const classes = useStyles();\n\n  //This is the amount that will show you have in your wallet\n  const [wallet, setWallet] = useState(0);\n\n  //Formatter\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n  });\n\n  //When the page loads, then the wallet amount will be checked\n  useEffect(() => {}, [wallet]);\n\n  return (\n    <div className={classes.mainGrid}>\n      <Grid\n        container\n        spacing={3}\n        justify=\"space-between\"\n        alignItems=\"flex-start\">\n        <Grid item sm={8} xs={8}>\n          <Container>\n            <Typography variant=\"h3\">{formatter.format(wallet)}</Typography>\n          </Container>\n        </Grid>\n\n        <Grid item sm={4} xs={4}>\n          <Container\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n            }}>\n            <Chip\n              color=\"primary\"\n              label=\"Buy Crypto\"\n              icon={<AddIcon />}\n              onClick={() => console.log(\"we will do something\")}\n            />\n            <Chip\n              color=\"primary\"\n              label=\"QR code\"\n              icon={<CropFreeIcon />}\n              onClick={() => console.log(\"we will do something\")}\n            />\n          </Container>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.secondContainer}>\n        {/* This is where the wallet is going to show */}\n        <Paper elevation={3} variant=\"outlined\" className={classes.addFunds}>\n          <Typography variant=\"h5\" className={classes.addFunds_Typogrophy}>\n            Your Wallet is empty\n          </Typography>\n          <Button\n            startIcon={<AddIcon />}\n            variant=\"contained\"\n            style={{\n              backgroundColor: \"rgb(189, 17, 17)\",\n              color: \"white\",\n              margin: \"1rem\",\n              width: \"50%\",\n            }}>\n            Add funds\n          </Button>\n        </Paper>\n      </Grid>\n    </div>\n  );\n}\n","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Layout/Nav.jsx",["51","52"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemAvatar,\n  Drawer,\n  Divider,\n  List,\n  makeStyles,\n  Avatar,\n} from \"@material-ui/core\";\n\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport Brightness5Icon from \"@material-ui/icons/Brightness5\";\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\n\n//This is for Themeing Purpose\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: \"20%\",\n    marginLeft: \"2rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  drawerPaper: {\n    width: \"auto\",\n    padding: \"0.5rem\",\n    border: \"none\",\n    boxShadow: \"7px 0px 31px 0px rgba(0,0,0,0.05)\",\n  },\n  ListItems: {\n    padding: \"1rem\",\n    justifyItems: \"center\",\n    alignItems: \"center\",\n  },\n  sideBarGap: {\n    flexGrow: \"1\",\n  },\n  buttomNav: {\n    display: \"flex\",\n    direction: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  AppBar: {\n    background: \"none\",\n    boxShadow: \"none\",\n    width: `calc(100% - auto)`,\n  },\n}));\n\nexport default function Nav({ dark, setDark }) {\n  //This is for the infividual theming\n  const classes = useStyles();\n  //pulling out history.push to direct react router to load that page\n  const history = useHistory();\n  //This is an array of text, icons, and path (Routes) that will work like a navbar\n  const itemsList = [\n    {\n      text: \"Overiew\",\n      onClick: () => history.push(\"/\"),\n      icon: <VisibilityIcon />,\n    },\n    {\n      text: \"History\",\n      onClick: () => history.push(\"/History\"),\n\n      icon: <HistoryIcon />,\n    },\n    {\n      text: \"Invest\",\n      onClick: () => history.push(\"/Invest\"),\n\n      icon: <TimelineIcon />,\n    },\n    {\n      text: \"Market\",\n      onClick: () => history.push(\"/Market\"),\n\n      icon: <SearchIcon />,\n    },\n    {\n      text: \"Exchanges\",\n      onClick: () => history.push(\"/Exchanges\"),\n\n      icon: <AttachMoneyIcon />,\n    },\n    {\n      text: \"Save\",\n      onClick: () => history.push(\"/Save\"),\n\n      icon: <EqualizerIcon />,\n    },\n  ];\n  return (\n    <>\n      <Drawer\n        anchor=\"left\"\n        variant=\"permanent\"\n        classes={{ paper: classes.drawerPaper }}\n        className={classes.drawer}>\n        <div className={classes.sideBarGap}>\n          <List>\n            <ListItem alignItems=\"flex-start\">\n              <ListItemAvatar>\n                <Avatar />\n              </ListItemAvatar>\n              <ListItemText\n                primary=\"UserName/Number\"\n                secondary=\"Some thing else\"\n              />\n            </ListItem>\n          </List>\n          <List>\n            <ListItem\n              alignItems=\"flex-start\"\n              button\n              onClick={() => setDark(!dark)}>\n              <ListItemIcon>\n                {dark ? <Brightness5Icon /> : <NightsStayIcon />}\n              </ListItemIcon>\n              <ListItemText primary={dark ? \"Light Mode\" : \"Dark Mode\"} />\n            </ListItem>\n          </List>\n          <Divider />\n          <List>\n            {itemsList.map((item, index) => {\n              const { text, icon, onClick } = item;\n              return (\n                <ListItem\n                  className={classes.ListItems}\n                  button\n                  key={text}\n                  onClick={onClick}>\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n        <div>\n          <List>\n            <ListItem button onClick={() => history.push(\"/Help\")}>\n              <ListItemText primary=\"Help Center\" />\n            </ListItem>\n            <ListItem button onClick={() => history.push(\"/Settings\")}>\n              <ListItemText primary=\"Settings\" />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"Talk to Us\" />\n            </ListItem>\n          </List>\n        </div>\n        <div>\n          <List className={classes.buttomNav}>\n            <ListItem button>\n              <ListItemIcon>\n                <FacebookIcon fontSize=\"large\" />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem button>\n              <ListItemIcon>\n                <TwitterIcon fontSize=\"large\" />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem button>\n              <ListItemIcon>\n                <LinkedInIcon fontSize=\"large\" />\n              </ListItemIcon>\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n    </>\n  );\n}\n","/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Pages/Settings.jsx",[],"/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Pages/HelpCenter.jsx",[],"/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Pages/History.jsx",[],"/Users/syedkhurshid/Documents/Coding/React/blockchain/src/Pages/Invest.jsx",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":22,"column":7,"nodeType":"59","messageId":"60","endLine":22,"endColumn":16},{"ruleId":"57","severity":1,"message":"61","line":27,"column":7,"nodeType":"59","messageId":"60","endLine":27,"endColumn":17},{"ruleId":"57","severity":1,"message":"62","line":44,"column":18,"nodeType":"59","messageId":"60","endLine":44,"endColumn":27},{"ruleId":"57","severity":1,"message":"63","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"64","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'darkTheme' is assigned a value but never used.","Identifier","unusedVar","'LightTheme' is assigned a value but never used.","'setWallet' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]